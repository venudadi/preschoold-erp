================================================================================
PRESCHOOL ERP - STAGING DEPLOYMENT ON DIGITALOCEAN APP PLATFORM
STEP-BY-STEP GUIDE
================================================================================

OVERVIEW:
This guide will help you deploy your Preschool ERP system to DigitalOcean's
App Platform for staging/testing. The entire process takes about 30-45 minutes.

WHAT YOU'LL GET:
- Staging environment at: https://preschool-erp-staging-xxxxx.ondigitalocean.app
- Automatic HTTPS/SSL certificate
- Managed MySQL database with automatic backups
- Auto-deploy on every push to 'staging' branch
- Estimated cost: $12/month

================================================================================
STEP 1: RESOLVE GIT SECRET ISSUE (REQUIRED BEFORE PUSHING)
================================================================================

PROBLEM:
GitHub detected an Anthropic API key in your git history (backend/.env file).
You must resolve this before you can push the staging branch.

OPTION A - QUICK FIX (Fastest - Use this to get started):
---------------------------------------------------------
1. Click this URL to allow the secret on GitHub:
   https://github.com/venudadi/preschoold-erp/security/secret-scanning/unblock-secret/33q7ZO2ikii6RoExgAjheGyw5YX

2. Click "Allow secret" button

3. This allows you to push immediately (you can clean history later)

OPTION B - PROPER FIX (Recommended for production):
----------------------------------------------------
1. Download git-filter-repo tool:
   - Windows: Download from https://github.com/newren/git-filter-repo/releases
   - Place git-filter-repo in your PATH

2. Open terminal in project root and run:

   git filter-repo --path backend/.env --invert-paths --force

3. Re-add remote:

   git remote add origin https://github.com/venudadi/preschoold-erp.git

4. Force push:

   git push origin main --force
   git push origin staging --force

VERIFICATION:
After completing either option, try:
   git push origin staging

If successful, proceed to Step 2. If error persists, use Option A.

================================================================================
STEP 2: CREATE AND PUSH STAGING BRANCH
================================================================================

1. Open terminal/command prompt in your project root folder

2. Create staging branch:

   git checkout -b staging

3. Push staging branch to GitHub:

   git push -u origin staging

   Expected output: "Branch 'staging' set up to track remote branch 'staging'"

4. Verify on GitHub:
   - Go to: https://github.com/venudadi/preschoold-erp
   - Click "branches" dropdown (should show "main" and "staging")

STATUS CHECK: You should now have two branches on GitHub: main and staging ✓

================================================================================
STEP 3: CREATE DIGITALOCEAN ACCOUNT (IF YOU DON'T HAVE ONE)
================================================================================

1. Go to: https://www.digitalocean.com

2. Click "Sign Up" (top right)

3. Choose sign-up method:
   - Option 1: Use GitHub account (recommended - easier integration)
   - Option 2: Use email

4. Complete verification:
   - Verify email address
   - Add payment method (required even for free tier)
   - Get $200 free credit for 60 days (if using referral link)

5. You'll land on the DigitalOcean Cloud Dashboard

STATUS CHECK: You should be logged into DigitalOcean dashboard ✓

================================================================================
STEP 4: CREATE APP PLATFORM PROJECT
================================================================================

1. In DigitalOcean dashboard, click "Apps" in left sidebar
   (or go to: https://cloud.digitalocean.com/apps)

2. Click green "Create App" button

3. Choose source:
   - Select "GitHub"
   - Click "Manage Access" if first time
   - Authorize DigitalOcean to access your repositories
   - Select: "Only select repositories"
   - Choose: "venudadi/preschoold-erp"
   - Click "Install & Authorize"

4. Configure source:
   - Repository: Select "venudadi/preschoold-erp" from dropdown
   - Branch: Select "staging" (IMPORTANT: not main)
   - Source Directory: Leave as "/" (root)
   - Autodeploy: Check "Autodeploy code changes" ✓

5. Click "Next" button at bottom

STATUS CHECK: You should see "Edit Plan" screen with detected resources ✓

================================================================================
STEP 5: CONFIGURE APP COMPONENTS MANUALLY
================================================================================

DigitalOcean will try to auto-detect your app. We need to configure it properly.

5A. CONFIGURE FRONTEND (Static Site)
------------------------------------

1. In "Resources" section, look for "frontend" component

2. If not detected, click "Add Resource" → "Static Site"

3. Configure frontend:
   - Name: frontend-staging
   - Source Directory: /frontend
   - Build Command: npm ci --legacy-peer-deps && npm run build
   - Output Directory: /dist
   - Environment Variables: (leave blank for now)

4. Click "Save" or continue to next component

5B. CONFIGURE BACKEND (Web Service)
-----------------------------------

1. Look for "backend" component or click "Add Resource" → "Web Service"

2. Configure backend:
   - Name: backend-staging
   - Source Directory: /backend
   - Build Command: npm ci --legacy-peer-deps
   - Run Command: node index.js
   - HTTP Port: 5001
   - Environment Variables: (we'll add these later)
   - Health Check Path: /api/health (if available, else leave blank)

3. Instance Size:
   - Select "Basic"
   - Choose "Basic XXS - $5/mo" (512MB RAM, 1 vCPU)

4. Instance Count: 1

5. Click "Save"

5C. ADD DATABASE (Managed MySQL)
--------------------------------

1. Scroll down and click "Add Resource" → "Database"

2. Configure database:
   - Engine: MySQL
   - Version: 8
   - Name: preschool-db-staging
   - Cluster Name: preschool-db-staging-cluster

3. Database Plan:
   - For staging, select "Dev Database - $7/mo" (1GB RAM)
   - Note: This is for testing only, not suitable for production

4. Region: Choose same as your app (usually NYC1 or SFO3)

5. Click "Create and Attach"

STATUS CHECK: You should have 3 components:
- frontend-staging (Static Site)
- backend-staging (Web Service)
- preschool-db-staging (Database) ✓

================================================================================
STEP 6: CONFIGURE ENVIRONMENT VARIABLES
================================================================================

6A. BACKEND ENVIRONMENT VARIABLES
----------------------------------

1. Click on "backend-staging" component to expand it

2. Click "Edit" next to Environment Variables

3. Add these variables ONE BY ONE:

   Variable 1:
   - Key: NODE_ENV
   - Value: staging
   - Type: Plain text
   - Click "Add Variable"

   Variable 2:
   - Key: PORT
   - Value: 5001
   - Type: Plain text
   - Click "Add Variable"

   Variable 3:
   - Key: JWT_SECRET
   - Value: (generate a strong random string - see below)
   - Type: Secret (encrypted)
   - Click "Add Variable"

   HOW TO GENERATE JWT_SECRET:
   Open terminal and run:
   node -e "console.log(require('crypto').randomBytes(32).toString('hex'))"

   Or use online generator: https://randomkeygen.com/
   Copy the "CodeIgniter Encryption Key" (256-bit)

   Variable 4:
   - Key: DB_HOST
   - Value: ${preschool-db-staging.HOSTNAME}
   - Type: Plain text
   - Click "Add Variable"

   Variable 5:
   - Key: DB_PORT
   - Value: ${preschool-db-staging.PORT}
   - Type: Plain text
   - Click "Add Variable"

   Variable 6:
   - Key: DB_USER
   - Value: ${preschool-db-staging.USERNAME}
   - Type: Plain text
   - Click "Add Variable"

   Variable 7:
   - Key: DB_PASSWORD
   - Value: ${preschool-db-staging.PASSWORD}
   - Type: Secret
   - Click "Add Variable"

   Variable 8:
   - Key: DB_NAME
   - Value: ${preschool-db-staging.DATABASE}
   - Type: Plain text
   - Click "Add Variable"

4. Click "Save" to save all environment variables

6B. FRONTEND ENVIRONMENT VARIABLES
-----------------------------------

1. Click on "frontend-staging" component to expand it

2. Click "Edit" next to Environment Variables

3. Add this variable:

   Variable 1:
   - Key: VITE_API_URL
   - Value: ${backend-staging.PUBLIC_URL}
   - Type: Plain text
   - Click "Add Variable"

4. Click "Save"

STATUS CHECK:
- Backend should have 8 environment variables ✓
- Frontend should have 1 environment variable ✓

================================================================================
STEP 7: ADD PRE-DEPLOY JOB FOR MIGRATIONS
================================================================================

This ensures database migrations run automatically before each deployment.

1. Scroll to bottom, click "Add Resource" → "Job"

2. Configure the job:
   - Name: migrations-staging
   - Kind: Pre-Deploy Job (select from dropdown)
   - Source Directory: /backend
   - Build Command: npm ci --legacy-peer-deps
   - Run Command: node migrate.js

3. Instance Size: Basic XXS

4. Environment Variables (same as backend):
   Copy all the DB_* environment variables from backend:
   - DB_HOST: ${preschool-db-staging.HOSTNAME}
   - DB_PORT: ${preschool-db-staging.PORT}
   - DB_USER: ${preschool-db-staging.USERNAME}
   - DB_PASSWORD: ${preschool-db-staging.PASSWORD}
   - DB_NAME: ${preschool-db-staging.DATABASE}
   - NODE_ENV: staging

5. Click "Save"

STATUS CHECK: You should now have 4 components total:
- frontend-staging (Static Site)
- backend-staging (Web Service)
- preschool-db-staging (Database)
- migrations-staging (Pre-Deploy Job) ✓

================================================================================
STEP 8: REVIEW AND CREATE APP
================================================================================

1. Review your configuration:
   - App Name: preschool-erp-staging (you can change this)
   - Region: NYC1 or your chosen region
   - Total cost: Approximately $12/month

2. Cost Breakdown:
   - Frontend: $0 (free tier)
   - Backend: $5/month (Basic XXS)
   - Database: $7/month (Dev Database)
   - Job: $0 (only runs during deploy)
   - Total: $12/month

3. Click the big green "Create Resources" button at the bottom

4. Wait for deployment to start...

STATUS CHECK: You should see "Building..." status for each component ✓

================================================================================
STEP 9: MONITOR FIRST DEPLOYMENT
================================================================================

The first deployment takes 10-15 minutes. Here's what happens:

1. BUILDING PHASE (5-8 minutes):
   - Installing dependencies (npm ci)
   - Building frontend (npm run build)
   - Building backend
   - Creating database cluster

   You'll see progress bars for each component.

2. DEPLOYING PHASE (3-5 minutes):
   - Running migrations (Pre-Deploy Job)
   - Starting backend service
   - Deploying frontend to CDN
   - Provisioning database
   - Generating SSL certificate

3. MONITOR PROGRESS:
   - Watch the "Activity" tab for real-time logs
   - Click on each component to see detailed logs

4. COMMON ISSUES & SOLUTIONS:

   Issue: "Build failed - npm install error"
   Solution: Check that --legacy-peer-deps is in build command

   Issue: "Migration job failed"
   Solution: Check database environment variables are correct

   Issue: "Backend health check failed"
   Solution: Check PORT is set to 5001, verify backend starts properly

   Issue: "Frontend shows blank page"
   Solution: Check VITE_API_URL is set, verify build output directory is /dist

STATUS CHECK:
When successful, all components should show green "✓ Active" status ✓

================================================================================
STEP 10: ACCESS YOUR STAGING APPLICATION
================================================================================

1. Once deployment completes, you'll see your app URLs:

   Frontend URL (your main app):
   https://preschool-erp-staging-xxxxx.ondigitalocean.app

   Backend API URL:
   https://backend-staging-xxxxx.ondigitalocean.app

2. Copy the frontend URL and open in browser

3. Test the application:
   - Can you see the login page? ✓
   - Can you login with super admin credentials? ✓
   - Check browser console for errors (F12)
   - Test a few features

4. Get Database Credentials (if needed):
   - Click on "preschool-db-staging" component
   - Click "Connection Details" tab
   - Copy connection details for MySQL Workbench or other tools

STATUS CHECK: Application is accessible and functional ✓

================================================================================
STEP 11: SET UP AUTOMATIC DEPLOYMENTS
================================================================================

Now every time you push to the 'staging' branch, it auto-deploys!

1. Make a test change:

   # Edit a file
   echo "Test update" >> README.md

   # Commit
   git add README.md
   git commit -m "test: staging auto-deploy"

   # Push to staging branch
   git push origin staging

2. Watch it deploy:
   - Go to DigitalOcean Apps dashboard
   - Click on your app
   - Go to "Activity" tab
   - You should see new deployment starting automatically!

3. Deployment triggers:
   - Push to staging branch → Auto-deploy to staging ✓
   - Manual deploy → Click "Actions" → "Force Rebuild & Deploy"

STATUS CHECK: Auto-deployment is working ✓

================================================================================
STEP 12: VERIFY EVERYTHING WORKS
================================================================================

CHECKLIST - Test these features:

□ Can access staging URL
□ Login page loads
□ Can login as super admin
□ Dashboard displays correctly
□ Can create/view students
□ Can create/view teachers
□ Parent dashboard works
□ Daily activities feature works
□ Database is persisting data
□ No errors in browser console
□ Backend API responding correctly

If all items checked, your staging deployment is SUCCESSFUL! ✓

================================================================================
STEP 13: OPTIONAL - ADD CUSTOM DOMAIN
================================================================================

If you want staging.yourschool.com instead of the DigitalOcean URL:

1. Go to your app settings → "Domains" tab

2. Click "Add Domain"

3. Enter domain: staging.yourschool.com

4. DigitalOcean shows DNS records to add:

   In your domain registrar (GoDaddy, Namecheap, etc.):
   - Type: CNAME
   - Name: staging
   - Value: preschool-erp-staging-xxxxx.ondigitalocean.app
   - TTL: 3600

5. Add the DNS record at your registrar

6. Wait 5-30 minutes for DNS propagation

7. DigitalOcean will automatically generate SSL certificate

8. Your app will be available at: https://staging.yourschool.com

================================================================================
TROUBLESHOOTING
================================================================================

PROBLEM: Build fails with "Module not found"
SOLUTION:
- Check package.json is in the correct source directory
- Verify build command includes npm ci --legacy-peer-deps
- Check Node version compatibility

PROBLEM: Backend won't start
SOLUTION:
- Check Runtime Logs: App → backend-staging → Runtime Logs
- Verify PORT environment variable is 5001
- Check database connection variables are correct
- Ensure node index.js is the correct start command

PROBLEM: Database connection failed
SOLUTION:
- Verify all DB_* environment variables use ${preschool-db-staging.XXX} format
- Check database is in "Active" state
- Review migration job logs for errors
- Try manually running migrations from console

PROBLEM: Frontend shows white screen
SOLUTION:
- Check browser console (F12) for errors
- Verify VITE_API_URL is set to ${backend-staging.PUBLIC_URL}
- Check build output directory is /dist (not dist or build)
- Verify index.html exists in build output

PROBLEM: CORS errors in browser
SOLUTION:
- Check backend CORS configuration allows frontend domain
- Verify VITE_API_URL points to correct backend URL
- Check backend is running and accessible

PROBLEM: Migrations failed
SOLUTION:
- Check migration job logs in Activity tab
- Verify database credentials are correct
- Try running migrations manually from backend console
- Check if tables already exist (migration might be idempotent)

HOW TO VIEW LOGS:
1. Go to your app in DigitalOcean
2. Click on component (backend-staging, frontend-staging, etc.)
3. Click "Runtime Logs" or "Build Logs" tab
4. Use search/filter to find specific errors

HOW TO ACCESS BACKEND CONSOLE:
1. Go to backend-staging component
2. Click "Console" tab
3. Type commands (e.g., node migrate.js, npm run test)
4. Press Enter to execute

================================================================================
MAINTENANCE & MONITORING
================================================================================

VIEW LOGS:
- Go to App → backend-staging → Runtime Logs
- Filter by date/time
- Search for errors

VIEW METRICS:
- Go to App → Insights tab
- See CPU, Memory, Request rate graphs
- Monitor error rates

MANUAL DEPLOYMENT:
- Go to App → Settings
- Click "Force Rebuild & Deploy"
- Select components to rebuild

DATABASE BACKUP:
- Go to preschool-db-staging → Backups
- Click "Create Backup Now"
- Backups retained for 7 days (Dev DB) or 30 days (Production DB)

RESTORE DATABASE:
- Go to Backups tab
- Select backup
- Click "Restore"
- Confirm restoration

SCALE UP/DOWN:
- Go to backend-staging → Settings
- Change instance size (XXS → XS → S → M)
- Change instance count (1 → 2 → 3)
- Click "Save"

================================================================================
COSTS & BILLING
================================================================================

CURRENT STAGING COSTS:
- Frontend Static Site: $0/month (free tier)
- Backend Basic XXS: $5/month
- Dev Database: $7/month
- Bandwidth: 100GB free/month
- Build minutes: Unlimited free
---------------------------------------------
TOTAL: $12/month

HOW TO MONITOR COSTS:
1. Go to DigitalOcean → Billing
2. See current month usage
3. View cost breakdown by resource

HOW TO REDUCE COSTS:
- Use smaller instance size (if performance allows)
- Delete app when not in use (for testing only)
- Share database between multiple apps

HOW TO INCREASE BUDGET:
1. Go to Settings → Billing → Alerts
2. Set alert at your budget limit (e.g., $20)
3. Get email when spending approaches limit

================================================================================
NEXT STEPS
================================================================================

Now that staging is deployed:

1. ✓ Test all features thoroughly on staging
2. ✓ Share staging URL with team for feedback
3. ✓ Document any bugs found
4. ✓ Fix issues and push to staging branch (auto-deploys)
5. ✓ When ready, deploy to production:
   - Merge staging → main
   - Create production app using .do/app.yaml
   - Use Production database ($15/month)
   - Use larger backend instance (Basic XS - $12/month)

STAGING WORKFLOW:
feature-branch → staging → test → fix → repeat

PRODUCTION WORKFLOW:
staging (tested & stable) → main (production)

================================================================================
SUPPORT & RESOURCES
================================================================================

DigitalOcean Documentation:
https://docs.digitalocean.com/products/app-platform/

Community Tutorials:
https://www.digitalocean.com/community/tutorials

Get Help:
https://cloud.digitalocean.com/support/tickets

App Platform Pricing:
https://www.digitalocean.com/pricing/app-platform

Your App Dashboard:
https://cloud.digitalocean.com/apps

================================================================================
SUCCESS CHECKLIST
================================================================================

If you can check all these boxes, you're done! ✓

□ Git secret issue resolved
□ Staging branch created and pushed to GitHub
□ DigitalOcean account created
□ App created with all 4 components
□ Environment variables configured
□ First deployment successful
□ Can access staging URL
□ Application works correctly
□ Auto-deploy on push works
□ Database is functioning
□ No critical errors in logs

CONGRATULATIONS! Your staging environment is live! 🎉

Staging URL: https://preschool-erp-staging-xxxxx.ondigitalocean.app
Cost: ~$12/month
Auto-deploys: On every push to 'staging' branch

================================================================================
END OF GUIDE
================================================================================

Questions? Issues?
Create an issue on GitHub: https://github.com/venudadi/preschoold-erp/issues

Last updated: 2025-01-09
